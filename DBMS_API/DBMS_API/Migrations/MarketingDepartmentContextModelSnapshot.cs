// <auto-generated />
using System;
using DBMS_API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBMS_API.Migrations
{
    [DbContext(typeof(MarketingDepartmentContext))]
    partial class MarketingDepartmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Additional")
                        .HasColumnType("text")
                        .HasColumnName("additional");

                    b.Property<bool?>("Booking")
                        .HasColumnType("boolean")
                        .HasColumnName("booking");

                    b.Property<string>("Equipment")
                        .HasColumnType("text")
                        .HasColumnName("equipment");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("integer")
                        .HasColumnName("manager_id");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<string>("Placement")
                        .HasColumnType("text")
                        .HasColumnName("placement");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<DateOnly?>("Releasedate")
                        .HasColumnType("date")
                        .HasColumnName("releasedate");

                    b.Property<string>("Specialoffer")
                        .HasColumnType("text")
                        .HasColumnName("specialoffer");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ParentId");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.CarClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Characteristics")
                        .HasColumnType("text")
                        .HasColumnName("characteristics");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.HasKey("Id");

                    b.ToTable("carsclass");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fio")
                        .HasColumnType("text")
                        .HasColumnName("fio");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("integer")
                        .HasColumnName("manager_id");

                    b.Property<string>("Passportdata")
                        .HasColumnType("text")
                        .HasColumnName("passportdata");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.Property<string>("Requisites")
                        .HasColumnType("text")
                        .HasColumnName("requisites");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<string>("Clientrequisites")
                        .HasColumnType("text")
                        .HasColumnName("clientrequisites");

                    b.Property<string>("Companyinformation")
                        .HasColumnType("text")
                        .HasColumnName("companyinformation");

                    b.Property<string>("Companyrequisites")
                        .HasColumnType("text")
                        .HasColumnName("companyrequisites");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("contracts");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fio")
                        .HasColumnType("text")
                        .HasColumnName("fio");

                    b.Property<string>("Passportdata")
                        .HasColumnType("text")
                        .HasColumnName("passportdata");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.Property<string>("Post")
                        .HasColumnType("text")
                        .HasColumnName("post");

                    b.Property<string>("Requisites")
                        .HasColumnType("text")
                        .HasColumnName("requisites");

                    b.HasKey("Id");

                    b.ToTable("managers");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.ProductsToSold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfProducts");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("productstosold");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Soldproduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("integer")
                        .HasColumnName("manager_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProductId");

                    b.ToTable("soldproducts");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Car", b =>
                {
                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Manager", "Manager")
                        .WithMany("Cars")
                        .HasForeignKey("ManagerId");

                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.CarClass", "Parent")
                        .WithMany("Cars")
                        .HasForeignKey("ParentId");

                    b.Navigation("Manager");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Client", b =>
                {
                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Manager", "Manager")
                        .WithMany("Clients")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.ProductsToSold", b =>
                {
                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Soldproduct", "Order")
                        .WithMany("ProductsTosolds")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Product", "Product")
                        .WithMany("ProductsTosolds")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Soldproduct", b =>
                {
                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Manager", "Manager")
                        .WithMany("Soldproducts")
                        .HasForeignKey("ManagerId");

                    b.HasOne("DBMS_API.Domain.Models.MarketingDepartment.Product", "Product")
                        .WithMany("Soldproducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Manager");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.CarClass", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Manager", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Clients");

                    b.Navigation("Soldproducts");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Product", b =>
                {
                    b.Navigation("ProductsTosolds");

                    b.Navigation("Soldproducts");
                });

            modelBuilder.Entity("DBMS_API.Domain.Models.MarketingDepartment.Soldproduct", b =>
                {
                    b.Navigation("ProductsTosolds");
                });
#pragma warning restore 612, 618
        }
    }
}
